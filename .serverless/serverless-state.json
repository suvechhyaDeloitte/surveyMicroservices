{
  "service": {
    "service": "my-serverless",
    "serviceObject": {
      "name": "my-serverless"
    },
    "provider": {
      "stage": "dev",
      "region": "us-east-1",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "nodejs8.10",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem"
          ],
          "Resource": [
            {
              "Fn::GetAtt": [
                "SurveyUsersDynamoDBTable",
                "Arn"
              ]
            },
            {
              "Fn::GetAtt": [
                "SurveyDynamoDBTable",
                "Arn"
              ]
            }
          ]
        }
      ],
      "environment": {
        "USERS_TABLE": "users-all-table-dev",
        "SURVEY_TABLE": "survey-all-table-dev"
      },
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "UserDashregisterLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/my-serverless-dev-user-register"
            }
          },
          "UserDashloginLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/my-serverless-dev-user-login"
            }
          },
          "UserDashconfirmLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/my-serverless-dev-user-confirm"
            }
          },
          "UserDashlogoutLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/my-serverless-dev-user-logout"
            }
          },
          "UserDashgetDashallLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/my-serverless-dev-user-get-all"
            }
          },
          "SurveyDashcreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/my-serverless-dev-survey-create"
            }
          },
          "SurveyDashupdateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/my-serverless-dev-survey-update"
            }
          },
          "SurveyDashgetDashitemLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/my-serverless-dev-survey-get-item"
            }
          },
          "SurveyDashgetDashallLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/my-serverless-dev-survey-get-all"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "my-serverless",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-serverless-dev-user-register:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-serverless-dev-user-login:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-serverless-dev-user-confirm:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-serverless-dev-user-logout:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-serverless-dev-user-get-all:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-serverless-dev-survey-create:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-serverless-dev-survey-update:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-serverless-dev-survey-get-item:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-serverless-dev-survey-get-all:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-serverless-dev-user-register:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-serverless-dev-user-login:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-serverless-dev-user-confirm:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-serverless-dev-user-logout:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-serverless-dev-user-get-all:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-serverless-dev-survey-create:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-serverless-dev-survey-update:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-serverless-dev-survey-get-item:*:*"
                          },
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-serverless-dev-survey-get-all:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "my-serverless",
                    "dev",
                    "us-east-1",
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "UserDashregisterLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/my-serverless/dev/1553073268610-2019-03-20T09:14:28.610Z/my-serverless.zip"
              },
              "FunctionName": "my-serverless-dev-user-register",
              "Handler": "modules/user.register",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "users-all-table-dev",
                  "SURVEY_TABLE": "survey-all-table-dev"
                }
              }
            },
            "DependsOn": [
              "UserDashregisterLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "UserDashregisterLambdaVersionXfbGxcGBWofJRQ6oTk7cwcKWNQBNaO35xqOlC2S1SU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UserDashregisterLambdaFunction"
              },
              "CodeSha256": "sdvbRMJAhF65pJY9g5/e/uwAA6uG5gyO/3IbYSKBBOY="
            }
          },
          "UserDashloginLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/my-serverless/dev/1553073268610-2019-03-20T09:14:28.610Z/my-serverless.zip"
              },
              "FunctionName": "my-serverless-dev-user-login",
              "Handler": "modules/user.login",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "users-all-table-dev",
                  "SURVEY_TABLE": "survey-all-table-dev"
                }
              }
            },
            "DependsOn": [
              "UserDashloginLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "UserDashloginLambdaVersionUQwAFJGYeixM0zI71Lgsb9yrizmNBjdppT4lI49iR4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UserDashloginLambdaFunction"
              },
              "CodeSha256": "sdvbRMJAhF65pJY9g5/e/uwAA6uG5gyO/3IbYSKBBOY="
            }
          },
          "UserDashconfirmLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/my-serverless/dev/1553073268610-2019-03-20T09:14:28.610Z/my-serverless.zip"
              },
              "FunctionName": "my-serverless-dev-user-confirm",
              "Handler": "modules/user.confirm",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "users-all-table-dev",
                  "SURVEY_TABLE": "survey-all-table-dev"
                }
              }
            },
            "DependsOn": [
              "UserDashconfirmLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "UserDashconfirmLambdaVersionzP23zzL82cu1swEGZIcSrQRi8PNiqBUuH4XVmUbTVA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UserDashconfirmLambdaFunction"
              },
              "CodeSha256": "sdvbRMJAhF65pJY9g5/e/uwAA6uG5gyO/3IbYSKBBOY="
            }
          },
          "UserDashlogoutLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/my-serverless/dev/1553073268610-2019-03-20T09:14:28.610Z/my-serverless.zip"
              },
              "FunctionName": "my-serverless-dev-user-logout",
              "Handler": "modules/user.signout",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "users-all-table-dev",
                  "SURVEY_TABLE": "survey-all-table-dev"
                }
              }
            },
            "DependsOn": [
              "UserDashlogoutLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "UserDashlogoutLambdaVersionjD43SNWpwII4DPeYiaflA0JYSRGZWcgUN3Rp7pIrTtQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UserDashlogoutLambdaFunction"
              },
              "CodeSha256": "sdvbRMJAhF65pJY9g5/e/uwAA6uG5gyO/3IbYSKBBOY="
            }
          },
          "UserDashgetDashallLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/my-serverless/dev/1553073268610-2019-03-20T09:14:28.610Z/my-serverless.zip"
              },
              "FunctionName": "my-serverless-dev-user-get-all",
              "Handler": "modules/user.getAllUsers",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "users-all-table-dev",
                  "SURVEY_TABLE": "survey-all-table-dev"
                }
              }
            },
            "DependsOn": [
              "UserDashgetDashallLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "UserDashgetDashallLambdaVersionAT53KAbKqs3JHLn7FQZXaIp7D315fuUV0loKqNzLYiw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UserDashgetDashallLambdaFunction"
              },
              "CodeSha256": "sdvbRMJAhF65pJY9g5/e/uwAA6uG5gyO/3IbYSKBBOY="
            }
          },
          "SurveyDashcreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/my-serverless/dev/1553073268610-2019-03-20T09:14:28.610Z/my-serverless.zip"
              },
              "FunctionName": "my-serverless-dev-survey-create",
              "Handler": "modules/survey.create",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "users-all-table-dev",
                  "SURVEY_TABLE": "survey-all-table-dev"
                }
              }
            },
            "DependsOn": [
              "SurveyDashcreateLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "SurveyDashcreateLambdaVersionnBPfVxZ1q6he3d1FjikL8X5R5jRDZoS3qIt91G6G4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SurveyDashcreateLambdaFunction"
              },
              "CodeSha256": "sdvbRMJAhF65pJY9g5/e/uwAA6uG5gyO/3IbYSKBBOY="
            }
          },
          "SurveyDashupdateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/my-serverless/dev/1553073268610-2019-03-20T09:14:28.610Z/my-serverless.zip"
              },
              "FunctionName": "my-serverless-dev-survey-update",
              "Handler": "modules/survey.update",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "users-all-table-dev",
                  "SURVEY_TABLE": "survey-all-table-dev"
                }
              }
            },
            "DependsOn": [
              "SurveyDashupdateLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "SurveyDashupdateLambdaVersionf9WFwvpF8lwBbfcSqAZF6qwpTvlFr6J7ZASIFIzs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SurveyDashupdateLambdaFunction"
              },
              "CodeSha256": "sdvbRMJAhF65pJY9g5/e/uwAA6uG5gyO/3IbYSKBBOY="
            }
          },
          "SurveyDashgetDashitemLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/my-serverless/dev/1553073268610-2019-03-20T09:14:28.610Z/my-serverless.zip"
              },
              "FunctionName": "my-serverless-dev-survey-get-item",
              "Handler": "modules/survey.getItemByName",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "users-all-table-dev",
                  "SURVEY_TABLE": "survey-all-table-dev"
                }
              }
            },
            "DependsOn": [
              "SurveyDashgetDashitemLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "SurveyDashgetDashitemLambdaVersionYf32vpTKyFwLS8AuUkgtslA8ap9XYPQ1y1A3hYqH6Dk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SurveyDashgetDashitemLambdaFunction"
              },
              "CodeSha256": "sdvbRMJAhF65pJY9g5/e/uwAA6uG5gyO/3IbYSKBBOY="
            }
          },
          "SurveyDashgetDashallLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/my-serverless/dev/1553073268610-2019-03-20T09:14:28.610Z/my-serverless.zip"
              },
              "FunctionName": "my-serverless-dev-survey-get-all",
              "Handler": "modules/survey.getAllSurveys",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "users-all-table-dev",
                  "SURVEY_TABLE": "survey-all-table-dev"
                }
              }
            },
            "DependsOn": [
              "SurveyDashgetDashallLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "SurveyDashgetDashallLambdaVersionas0Mec0IMFo3LMX9ZiBBBTTg4TwGbDLp0Kw3xo4WBM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SurveyDashgetDashallLambdaFunction"
              },
              "CodeSha256": "sdvbRMJAhF65pJY9g5/e/uwAA6uG5gyO/3IbYSKBBOY="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-my-serverless",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceServices": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "services",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceServicesUser": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceServices"
              },
              "PathPart": "user",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceServicesUserRegister": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceServicesUser"
              },
              "PathPart": "register",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceServicesUserLogin": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceServicesUser"
              },
              "PathPart": "login",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceServicesUserConfirm": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceServicesUser"
              },
              "PathPart": "confirm",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceServicesUserSignout": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceServicesUser"
              },
              "PathPart": "signout",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceServicesUserGetall": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceServicesUser"
              },
              "PathPart": "getall",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceServicesSurvey": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceServices"
              },
              "PathPart": "survey",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceServicesSurveyCreate": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceServicesSurvey"
              },
              "PathPart": "create",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceServicesSurveyUpdate": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceServicesSurvey"
              },
              "PathPart": "update",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceServicesSurveyGetitem": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceServicesSurvey"
              },
              "PathPart": "getItem",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceServicesSurveyGetallsurveys": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceServicesSurvey"
              },
              "PathPart": "getAllSurveys",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodServicesUserRegisterPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceServicesUserRegister"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UserDashregisterLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodServicesUserLoginPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceServicesUserLogin"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UserDashloginLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodServicesUserConfirmPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceServicesUserConfirm"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UserDashconfirmLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodServicesUserSignoutPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceServicesUserSignout"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UserDashlogoutLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodServicesUserGetallGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceServicesUserGetall"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UserDashgetDashallLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodServicesSurveyCreatePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceServicesSurveyCreate"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SurveyDashcreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodServicesSurveyUpdatePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceServicesSurveyUpdate"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SurveyDashupdateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodServicesSurveyGetitemPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceServicesSurveyGetitem"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SurveyDashgetDashitemLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodServicesSurveyGetallsurveysGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceServicesSurveyGetallsurveys"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SurveyDashgetDashallLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1553073269803": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodServicesUserRegisterPost",
              "ApiGatewayMethodServicesUserLoginPost",
              "ApiGatewayMethodServicesUserConfirmPost",
              "ApiGatewayMethodServicesUserSignoutPost",
              "ApiGatewayMethodServicesUserGetallGet",
              "ApiGatewayMethodServicesSurveyCreatePost",
              "ApiGatewayMethodServicesSurveyUpdatePost",
              "ApiGatewayMethodServicesSurveyGetitemPost",
              "ApiGatewayMethodServicesSurveyGetallsurveysGet"
            ]
          },
          "UserDashregisterLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UserDashregisterLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UserDashloginLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UserDashloginLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UserDashconfirmLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UserDashconfirmLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UserDashlogoutLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UserDashlogoutLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UserDashgetDashallLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UserDashgetDashallLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SurveyDashcreateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SurveyDashcreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SurveyDashupdateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SurveyDashupdateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SurveyDashgetDashitemLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SurveyDashgetDashitemLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SurveyDashgetDashallLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SurveyDashgetDashallLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SurveyUsersDynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "userName",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "email",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userName",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "email",
                  "KeyType": "RANGE"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              },
              "TableName": "users-all-table-dev"
            }
          },
          "SurveyDynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "name",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "createdBy",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "name",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "createdBy",
                  "KeyType": "RANGE"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              },
              "TableName": "survey-all-table-dev"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "UserDashregisterLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UserDashregisterLambdaVersionXfbGxcGBWofJRQ6oTk7cwcKWNQBNaO35xqOlC2S1SU"
            }
          },
          "UserDashloginLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UserDashloginLambdaVersionUQwAFJGYeixM0zI71Lgsb9yrizmNBjdppT4lI49iR4"
            }
          },
          "UserDashconfirmLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UserDashconfirmLambdaVersionzP23zzL82cu1swEGZIcSrQRi8PNiqBUuH4XVmUbTVA"
            }
          },
          "UserDashlogoutLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UserDashlogoutLambdaVersionjD43SNWpwII4DPeYiaflA0JYSRGZWcgUN3Rp7pIrTtQ"
            }
          },
          "UserDashgetDashallLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UserDashgetDashallLambdaVersionAT53KAbKqs3JHLn7FQZXaIp7D315fuUV0loKqNzLYiw"
            }
          },
          "SurveyDashcreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SurveyDashcreateLambdaVersionnBPfVxZ1q6he3d1FjikL8X5R5jRDZoS3qIt91G6G4"
            }
          },
          "SurveyDashupdateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SurveyDashupdateLambdaVersionf9WFwvpF8lwBbfcSqAZF6qwpTvlFr6J7ZASIFIzs"
            }
          },
          "SurveyDashgetDashitemLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SurveyDashgetDashitemLambdaVersionYf32vpTKyFwLS8AuUkgtslA8ap9XYPQ1y1A3hYqH6Dk"
            }
          },
          "SurveyDashgetDashallLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SurveyDashgetDashallLambdaVersionas0Mec0IMFo3LMX9ZiBBBTTg4TwGbDLp0Kw3xo4WBM"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.us-east-1.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "usertable": "users-all-table-dev",
      "surveytable": "survey-all-table-dev"
    },
    "pluginsData": {},
    "functions": {
      "user-register": {
        "handler": "modules/user.register",
        "events": [
          {
            "http": {
              "path": "services/user/register",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "my-serverless-dev-user-register",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "user-login": {
        "handler": "modules/user.login",
        "events": [
          {
            "http": {
              "path": "services/user/login",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "my-serverless-dev-user-login",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "user-confirm": {
        "handler": "modules/user.confirm",
        "events": [
          {
            "http": {
              "path": "services/user/confirm",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "my-serverless-dev-user-confirm",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "user-logout": {
        "handler": "modules/user.signout",
        "events": [
          {
            "http": {
              "path": "services/user/signout",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "my-serverless-dev-user-logout",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "user-get-all": {
        "handler": "modules/user.getAllUsers",
        "events": [
          {
            "http": {
              "path": "services/user/getall",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "my-serverless-dev-user-get-all",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "survey-create": {
        "handler": "modules/survey.create",
        "events": [
          {
            "http": {
              "path": "services/survey/create",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "my-serverless-dev-survey-create",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "survey-update": {
        "handler": "modules/survey.update",
        "events": [
          {
            "http": {
              "path": "services/survey/update",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "my-serverless-dev-survey-update",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "survey-get-item": {
        "handler": "modules/survey.getItemByName",
        "events": [
          {
            "http": {
              "path": "services/survey/getItem",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "my-serverless-dev-survey-get-item",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "survey-get-all": {
        "handler": "modules/survey.getAllSurveys",
        "events": [
          {
            "http": {
              "path": "services/survey/getAllSurveys",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "my-serverless-dev-survey-get-all",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "SurveyUsersDynamoDBTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "userName",
                "AttributeType": "S"
              },
              {
                "AttributeName": "email",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "userName",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "email",
                "KeyType": "RANGE"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            },
            "TableName": "users-all-table-dev"
          }
        },
        "SurveyDynamoDBTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "name",
                "AttributeType": "S"
              },
              {
                "AttributeName": "createdBy",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "name",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "createdBy",
                "KeyType": "RANGE"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            },
            "TableName": "survey-all-table-dev"
          }
        }
      },
      "Outputs": {}
    },
    "layers": {},
    "artifact": "C:\\Users\\suvebanerjee\\MyServerless\\.serverless\\my-serverless.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/my-serverless/dev/1553073268610-2019-03-20T09:14:28.610Z",
    "artifact": "my-serverless.zip"
  }
}